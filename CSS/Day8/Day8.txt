가상 클래스와 가상 요소 선택자
HTML 문서의 수정 없이 CSS만으로 디자인적 요소를 추가할 수 있고, 반복되거나 쓸모없는 태그들을 화면 리더기에서 읽히지 않도록 하며, 코드 가독성을 높게 만들 수 있습니다.

선택자:가상클래스 { 속성: 값; }

앵커 가상 클래스
화면의 특정 요소에 커서가 향했을 때 특정 디자인을 입혀주는 동적인 스타일을 만들어줍니다.

:hover : 사용자가 해당 요소에 커서를 가져다 댔을 때
:active : 요소가 활성화 되었거나 클릭 되었을 때
:focus : 해당 요소에 키보드 포커스가 맞춰졌을 때

순서에 따른 가상 클래스
CSS 스타일을 주기 위해 클래스를 추가할 필요가 없습니다.

:first-child:li -> li 요소 중 첫번째 요소에 해당 CSS를 적용합니다.
:last-child:li -> li 요소 중 마지막에 해당 CSS를 적용합니다.
ol li:nth-child(n) -> li 요소 n번째 요소에 해당 CSS를 적용합니다.
예)
ol li:nth-child(2) {
    border-top: none;
}

가상 요소
가상 클래스가 실제로 존재하는 요소에 클래스 추가 없이 디자인을 입히기 위한 것이라면, 가상 요소는 실제로 존재하지 않는 요소를 만들게 합니다.

선택자::가상요소 { property: value; }

::first-line -> 해당 가상 요소는 텍스트의 첫번째 줄에만 특정 스타일을 입혀줍니다. 
::first-letter -> 텍스트의 첫 문자에 특정 스타일을 입혀줍니다.
::before -> 보통 이미지나 글, 그라데이션 등을 앞에 삽입시에 사용합니다.
::after -> 보통 이미지나 글, 그라데이션 등을 뒤에 삽입시에 사용합니다.

속성 선택자의 의미
HTML 태그에서 src, href, style과 같은 속성을 선택자로 지정할 수 있는 방법입니다. =(equal) 기호를 중심으로 *, ~ 등의 특수문자를 조합해서 종류가 나눠집니다.

<img src="apple.jpg">
------ ---   -----------
태그  속성   속성값(value)

선택자                  기능
[속성]               [속성명]
[속성="값"]       [속성명+속성값]
[속성~="값"]     [속성명+특정 문자가 들어간 속성값] -> 값이 완벽히 일치하는 문자
[속성*="값"]     [속성명+특정 문자가 들어간 속성값] -> 값이 포함된 모든 문자
[속성^="값"]    [속성명+접두사로 시작하는 속성값] -> 값이 접두사로 시작되는 모든 문자
[속성|="값"]     [속성명+접두사로 시작하는 속성값] -> 값이 접두사로 시작하는 문자중 완벽히 일치하는 문자 또는 "-"으로 연결된 문자)
[속성$="값"]     [속성명+접미사로 끝나는 속성값] -> 값이 접미사로 끝나는 모든 문자


복합 선택자

<body>
	<h2>하위 선택자</h2>
	<ul>
		<a href="https://www.naver.com">네이버</a>
		<li>
			<a href="https://www.google.com">구글</a>
		</li>
		<li>
			<p>다음</p>
		</li>		
		<li>
			<a href="https://www.nate.com">네이트</a>
		</li>
	</ul>
</body>


    <h2>                         <ul>
                          <a> <li>  <li> <li>
                                 <a>  <p> <a>
 
 1. 하위 선택자 : 조상의 요소 하위의 모든 요소를 선택하는 선택자입니다.
 예)
 ul a { ... } -> ul 요소의 자손(자식을 포함한 하위요소)중, a 인 요소들을 선택

2. 자식 선택자 : 부모의 요소 하위의 모든 자식을 선택하는 선택자입니다.
예)
ul >  { ... } -> ul 요소의 자식(ul 요소의 바로 아래 레벨)중, a인 요소들을 선택

3. 인접 형제 선택자 : 동일한 부모의 요소를 갖는 자식 요소들의 관계입니다. 선후 관계는 형/동생의 관계이고 이는 "먼저 나온 요소"/"이어서 나온 요소"를 의미합니다.
예)
h2 + p { ... } -> h2 요소의 형제 중 바로 다음에 위치한 동생 요소가 p 요소인 경우 선택

4. 일반 형제 선택자 : 형제 관계를 갖는 요소 중에서 형 요소 다음에 나오는 모든 동생요소를 선택하는 선택자입니다.
예)
h2 ~ p { ... } -> h2 요소의 형제 중 다음에 위치한 동생 p를 모두 선택


선택자 우선순위

0. !important 가 적용된 속성
p { color: red !important; }
1. 인라인(요소에 직접 style 속성)  : 1000점

2. 가장 나중에 적용된 스타일

* 같은 요소에 중복된 스타일을 주는 경우 
id : 100점
class : 10점
가상 class : 10점
속성 선택자 : 10점
태그 : 1점



