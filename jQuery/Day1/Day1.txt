제이쿼리 공식 사이트
https://jquery.com/

제이쿼리 적용
제이쿼리는 자바스크립트 라이브러리이므로, 제이쿼리 파일은 자바스크립트 파일(.js) 형태로 존재합니다.
따라서 웹 페이지에서 제이쿼리를 사용하기 위해서는 제이쿼리 파일을 먼저 웹 페이지에 로드해야 합니다.

Download the compressed, production jQuery 3.5.1
다운받아 그대로 개발에 사용하는 파일

Download the uncompressed, development jQuery 3.5.1
오픈소스 기반으로 수정하여 사용 가능한 파일

CDN(Content Delivery Network)을 이용하여 로드하는 방법
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

제이쿼리 문법의 시작

$ : 제이쿼리의 시작을 알리는 식별자
$() : 선택한 HTML 요소를 제이쿼리에서 이용할 수 있도록 생성해 주는 역할을 합니다. $() 함수의 인수로 HTML 태그 뿐 아니라, CSS 선택자를 전달하여 특정 HTML 요소를 선택할 수 있습니다.

$(선택자).동작함수(); 

$(funtion(){
	제이쿼리 코드;
});

또는

$(document).ready(function(){
	제이쿼리 코드;
});


선택자를 이용한 jQuery
제이쿼리를 사용하면 쉽게 HTML 요소를 선택하여 선택된 요소에 특정 동작을 설정할 수 있습니다. 제이쿼리에서는 요소를 선택하기 위해 CSS 선택자뿐만 아니라 비표준 선택자도 제공하고 있습니다.

$(funtion(){
	$(선택자).동작함수(); 
});

$(태그 선택자) = HTML 태그 선택자 (getElementsByTagname())
$(#아이디) = id 선택자 (getElementById())
$(.클래스) = class 선택자 (getElementsByClassName())
$("input[type='text']") = 속성 선택자 (input[type="text"])

무료 png 사이트
https://www.iconfinder.com/

요소의 필터링
제이쿼리에서는 선택한 요소 중에서 더욱 세분화된 선택을 하기 위한 필터링을 진행할 수 있습니다.

:eq(n)	    선택한 요소 중에서 인덱스가 n인 요소를 선택함.
:gt(n)	    선택한 요소 중에서 인덱스가 n보다 큰 요소를 모두 선택함.
:lt(n)	    선택한 요소 중에서 인덱스가 n보다 작은 요소를 모두 선택함.
:even	    선택한 요소 중에서 인덱스가 짝수인 요소를 모두 선택함.
:odd	    선택한 요소 중에서 인덱스가 홀수인 요소를 모두 선택함.
:first	    선택한 요소 중에서 첫 번째 요소를 선택함.
:last	    선택한 요소 중에서 마지막 요소를 선택함.
:animated   선택한 요소 중에서 애니메이션 효과가 실행 중인 요소를 모두 선택함.
:header	    선택한 요소 중에서 h1부터 h6까지의 요소를 모두 선택함.
:lang(언어)  선택한 요소 중에서 지정한 언어의 요소를 모두 선택함.
:not(선택자)  선택한 요소 중에서 지정한 선택자와 일치하지 않는 요소를 모두 선택함.
:root	    선택한 요소 중에서 최상위 루트 요소를 선택함.
:target	    선택한 요소 중에서 웹 페이지 URI의 fragment 식별자와 일치하는 요소를 모두 선택함.
:contains(텍스트)	선택한 요소 중에서 지정한 텍스트를 포함하는 요소를 모두 선택함.
:has(선택자)  선택한 요소 중에서 지정한 선택자와 일치하는 자손 요소를 갖는 요소를 모두 선택함.
:empty	    선택한 요소 중에서 자식 요소를 가지고 있지 않은 요소를 모두 선택함.
:parent	    선택한 요소 중에서 자식 요소를 가지고 있는 요소를 모두 선택함.

input 요소의 선택
제이쿼리에서는 입력 양식에 관련된 특정 요소를 손쉽게 선택할 수 있습니다.

:button	    type 속성값이 "button"인 요소를 모두 선택함.
:checkbox   type 속성값이 "checkbox"인 요소를 모두 선택함.
:file	    type 속성값이 "file"인 요소를 모두 선택함.
:image	    type 속성값이 "image"인 요소를 모두 선택함.
:password   type 속성값이 "password"인 요소를 모두 선택함.
:radio	    type 속성값이 "radio"인 요소를 모두 선택함.
:reset	    type 속성값이 "reset"인 요소를 모두 선택함.
:submit	    type 속성값이 "submit"인 요소를 모두 선택함.
:text	    type 속성값이 "text"인 요소를 모두 선택함.
:input	    <input>, <textarea>, <select>, <button>요소를 모두 선택함.
:checked    type 속성값이 "checkbox" 또는 "radio"인 요소 중에서 체크되어 있는 요소를 모두 선택함.
:selected   <option>요소 중에서 선택된 요소를 모두 선택함.
:focus	    현재 포커스가 가지고 있는 요소를 선택함.
:disabled   비활성화되어있는 요소를 모두 선택함.
:enabled    활성화되어있는 요소를 모두 선택함.


getter 메소드와 setter 메소드
선택자에 의해 선택된 요소의 값을 읽거나 설정하기 위해서는 제이쿼리 메소드를 통해 해당 요소에 접근해야 합니다. getter 메소드는 선택된 요소에 접근하여 그 값을 읽어오기 위한 메소드입니다. getter 메소드는 아무런 인수를 전달하지 않고 호출합니다. setter 메소드는 선택된 요소에 접근하여 그 값을 설정하기 위한 메소드입니다. setter 메소드는 대입하고자 하는 값을 인수로 전달하여 호출합니다.

getter 와 setter 메소드
.html()		해당 요소의 HTML 콘텐츠를 반환하거나 설정함.
.text()		해당 요소의 텍스트 콘텐츠를 반환하거나 설정함.
.width()	선택한 요소 중에서 첫 번째 요소의 너비를 픽셀 단위의 정수로 반환하거나 설정함.
.height()	선택한 요소 중에서 첫 번째 요소의 높이를 픽셀 단위의 정수로 반환하거나 설정함.
.attr()		해당 요소의 명시된 속성의 속성값을 반환하거나 설정함.
.position()	선택한 요소 중에서 첫 번째 요소에 대해 특정 위치에 존재하는 객체를 반환함. (getter 메소드)
.val()		<form>요소의 값을 반환하거나 설정함.


메소드 체이닝(method chaining)
getter 메소드는 선택된 요소의 값을 읽어서 그 값을 반환합니다. 만약 선택된 요소가 여러 개 존재하면, getter 메소드는 가장 "첫 번째 요소"의 값만 반환합니다. 하지만 setter 메소드는 선택된 '모든 요소'에 인수로 전달된 값을 설정합니다. 그리고 선택된 모든 요소에 접근할 수 있는 또 다른 제이쿼리 객체를 반환합니다. 이렇게 반환된 제이쿼리 객체를 이용하면 세미콜론(;)을 사용하지 않고 곧바로 다른 제이쿼리 메소드를 호출 할 수 있습니다. 이런 방식으로 여러 개의 메소드가 연속으로 호출되는 것을 메소드 체이닝이라고 합니다.

add() : 특정 요소를 추가로 선택할 때 사용합니다.
addBack() : 현재 선택한 요소와 함께 이전에 선택한 요소도 선택하게 합니다.
children() : 선택된 요소를 인수로 전달된 자식 요소로 선택을 변경합니다.
find() : 선택된 요소의 자식 요소중에서 인수로 전달된 자식 요소를 선택합니다.
end() : 현재의 연속적인 명령(메소드 체이닝)을 종료하고 선택 집합의 이전 요소를 찾아 반환해 줍니다.
is() : 인수로 주어진 객체에 해당하는 요소가 존재하면 true 값을 리턴해 줍니다.