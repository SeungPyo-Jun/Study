요소의 추가
append() : 선택한 요소의 마지막에 새로운 요소나 콘텐츠를 추가합니다.
예)
$("li").append("p")
prepend() : 선택한 요소의 처음에 새로운 요소나 콘텐츠를 추가합니다.
appendTo() : append() 메소드와 동일하지만 소스와 타겟의 위치가 서로 반대입니다.
예)
$("p").appendTo("li")
prependTo() : prepend() 메소드와 동일하지만 소스와 타겟의 위치가 서로 반대입니다.

기존 요소의 외부에 추가
before() : 선택한 요소의 바로 앞에 새로운 요소나 콘텐츠를 추가합니다.
after() : 선택한 요소 바로 뒤에 새로운 요소나 콘텐츠를 추가합니다.
insertBefore() : before() 메소드와 같지만 소스와 타겟의 위치가 서로 반대입니다.
insertafter() : after() 메소드와 같지만 소스와 타겟의 위치가 서로 반대입니다.

요소의 포함
wrap() : 선택한 요소를 포함하는 새로운 요소를 추가합니다.
wrapAll() : 선택한 모든 요소를 포함하는 새로운 요소를 추가합니다.
wrapInner() : 선택한 요소에 포함하는 새로운 요소를 추가합니다.

요소의 복사
clone() : 선택한 요소를 복사하여 새로운 요소를 생성합니다. clone() 메소드는 기본의 HTML 요소를 복사하여 새로운 HTML 요소를 생성할 뿐입니다. 따라서 반드시 append() 메소드나 appendTo() 메소드와 같은 다른 메소드를 이용하여 요소를 추가해야 합니다.

요소의 대체
replaceAll() : 선택한 요소를 지정한 요소로 대체합니다. 이 메소드는 인수로 선택자나 제이쿼리 객체, HTML DOM 요소, 배열 등을 전달받을 수 있습니다.

요소의 삭제
remove() : 선택한 요소를 DOM 트리에서 삭제합니다. 삭제되는 요소와 연관된 제이쿼리 데이터나 이벤트 모두 함께 삭제됩니다.
detach() : 선택한 요소를 DOM 트리에서 삭제합니다. 삭제되는 요소와 연관된 제이쿼리 데이터나 이벤트는 삭제되지 않고, 계속 유지됩니다. detach() 메소드가 반환하는 제이쿼리 객체를 append()나 prepend()와 같은 메소드에 인수로 전달하면 삭제된 요소를 다시 복구할 수 있습니다.
empty() : 선택한 요소의 자식 요소를 모두 삭제합니다. 이때 remove()나 detach() 메소드와는 달리 선택된 요소 그 자체는 삭제되지 않습니다.
unwrap() : 선택한 요소의 부모 요소를 삭제합니다.

조상 요소의 탐색
parent() : 선택한 요소의 부모요소를 선택합니다. 이때 선택자를 인수로 전달하여 전달받은 선택자에 해당하는 부모 요소만을 선택할 수도 있습니다.
parents() : 선택한 요소의 조상 요소를 모두 선택합니다. 이때 선택자를 인수로 전달하여 전달받은 선택자에 해당하는 조상 요소만을 선택할 수도 있습니다.
parentsUntil() : 선택한 요소의 조상 요소 중에서 전달받은 선택자에 해당하는 요소 바로 직전까지의 요소만을 모두 선택합니다. 선택자를 인수로 전달하지 않으면 parents() 메소드와 같이 선택한 요소의 조상 요소를 모두 선택합니다.
closest() : 자신을 포함한 조상 요소 중에서 전달받은 선택자에 해당하는 요소의 집합에서 가장 첫번째 요소를 선택합니다. parents 메소드와 비슷하지만 해당 요소의 조상 요소뿐 아니라 해당 요소 자신까지도 검사하는 점이 다릅니다.

형제 요소의 탐색
siblings() : 선택한 요소의 형제 요소 중에서 지정한 선택자에 해당하는 요소를 모두 선택합니다.
next() : 선택한 요소의 바로 다음에 위치한 형제 요소를 선택합니다.
nextAll() : 선택한 요소의 다음에 위치한 형제 요소를 모두 선택합니다. 이때 선택자를 인수로 전달하여, 전달받은 선택자에 해당하는 형제 요소만을 선택할 수도 있습니다.
nextUntil() : 선택한 요소의 형제 요소 중에서 전달받은 선택자에 해당하는 요소 바로 이전까지의 요소만을 모두 선택합니다. 인수를 전달하지 않으면 nextAll() 메소드와 같이 선택한 요소의 다음에 위치한 형제 요소를 모두 선택합니다.
(이전 형제 요소 : prev(), prevAll(), prevUntil())

자손 요소의 탐색
children() : 선택한 요소의 자식요소를 모두 선택합니다. 이때 선택자를 인수로 전달하여, 전달받은 선택자에 해당하는 자식 요소만을 선택할 수도 있습니다.
find() : 선택한 요소의 자손 요소 중에서 전달받은 선택자에 해당하는 자손 요소를 모두 선택합니다. 이때 별표(*)를 인수로 전달하여 선택한 자손 요소를 모두 선택할 수도 있습니다.


HTML 요소의 attribute 와 property 차이
<a href="https://www.naver.com">네이버</a> <!-- href는 attribute -->
<input type="checkbox" name="hobby" value="드라이브" checked> <!-- checked는 property -->

prop() : 제이쿼리 1.6부터 새롭게 정의된 메소드입니다. 이 메소드는 선택한 요소 집합의 첫번째 요소의 지정된 프로퍼티 값을 반환하거나, 선택한 요소의 지정된 프로퍼티를 전달받은 값으로 설정합니다.
attr() : 선택한 요소 집합의 첫번째 요소의 지정된 속성값을 반환하거나, 선택한 요소의 지정된 속성을 전달받은 값으로 설정합니다.


클래스의 설정
addClass() : 클래스를 추가할 수 있습니다.
removeClass() : 클래스를 제거할 수 있습니다.
toggleClass() : 선택한 요소에 클래스가 없으면 인수로 전달받은 클래스를 추가하고, 전달받은 클래스가 추가되어 있으면 제거합니다.
hasClass() : 인수로 전달받은 값이 선택한 요소의 클래스 이름과 일치하는지 확인합니다.


이벤트
이벤트 연결(Event Binding)
특정 요소에서 발생하는 이벤트를 처리하기 위해 이벤트 핸들러를 작성합니다. 작성된 이벤트 핸들러를 특정 요소에 연결하는 것을 이벤트의 연결이라고 합니다.

이벤트 처리의 발전
bind() -> live() -> delegate() -> on()
제이쿼리는 특정 요소에 이벤트를 연결하기 위해 on() 메소드를 사용합니다. 제이쿼리 1.7부터 사용하기 시작했습니다.

